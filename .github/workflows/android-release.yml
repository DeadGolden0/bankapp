name: 🚀 Android Release

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Nécessaire pour un bon suivi des versions

      - name: ☕ Setup JAVA
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: 🛠️ Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.2"
          channel: 'stable'
          cache: true

      - name: 🛠️ Clean Flutter
        run: flutter clean

      - name: 📦 Install Dependencies
        run: |
          flutter pub add collection:^1.19.0
          flutter pub get

      - name: ✏️ Commenter la ligne `android.enableR8=true`
        run: sed -i 's/^android.enableR8=true/# android.enableR8=true/g' android/gradle.properties

      - name: 📄 Vérifier la modification
        run: cat android/gradle.properties

      - name: 🚀 Commit & Push des modifications de gradle.properties
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git status
          git add android/gradle.properties || echo "Aucun changement à ajouter"
          git diff --cached --quiet || (git commit -m "🤖 Commenter android.enableR8=true automatiquement" && git push) || echo "Aucun changement à commit"


      - name: 🔍 Run SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: 🛠️ Créer les dossiers manquants
        run: mkdir -p build/app/outputs/flutter-apk/

      - name: 📦 Build APK
        run: flutter build apk --no-shrink

      - name: 🔍 Vérifier où est généré APK
        run: ls -R build/app/outputs/

      - name: 🚚 Déplacer APK dans un dossier spécifique
        run: |
          mkdir -p release-apk
          cp build/app/outputs/flutter-apk/app-release.apk release-apk/app-release.apk

      - name: 📤 Commit & Push de APK
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add release-apk/app-release.apk || echo "Aucun changement à ajouter"
          git diff --cached --quiet || (git commit -m "🚀 Nouvelle version APK générée automatiquement" && git push) || echo "Aucun changement à commit"


      #- name: 📤 Upload APK Artifact
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: release-apk
      #    path: build/app/outputs/flutter-apk/app-release.apk
